{"version":3,"sources":["App.js","Header.js","reportWebVitals.js","index.js"],"names":["App","props","isWinner","s","state","count","i","line","winnerLine","squares","alert","setTimeout","setState","Array","fill","clickHandler","event","data","target","getAttribute","currentSquares","console","log","className","onClick","this","React","Component","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71670765.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      count: 0\n    }\n    this.winnerLine = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n  }\n  isWinner = () => {\n  let s = (this.state.count % 2 === 0) ? \"X\" : \"0\";\n  for (let i=0; i<8; i++) {\n    let line = this.winnerLine[i];\n    if (this.state.squares[line[0]]===s\n      && this.state.squares[line[1]]===s\n      && this.state.squares[line[2]]===s) {\n        alert(s + ' Выиграли!');\n        setTimeout(()=>{\n          this.setState({squares:  Array(9).fill(null)})\n          this.setState({count:  0})\n        },3000);\n      }\n  }\n  }\n  clickHandler = event => {\n   //console.log(\"1\");\n   //номер квадрата\n   let data=event.target.getAttribute('data');\n   let currentSquares=this.state.squares;\n   console.log(currentSquares);\n   if (currentSquares[data] === null) {\n    currentSquares[data]=(this.state.count % 2 === 0) ? \"X\" : \"0\";\n    this.setState({count: this.state.count + 1});\n    this.setState({squares: currentSquares});\n  }\n  else {\n    alert(\"Так нельзя!!!\"); \n  }\n    this.isWinner();\n  }\n  render() {\n  return (\n   <div className=\"tic-tac-toe\">\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"0\">{this.state.squares[0]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"1\">{this.state.squares[1]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"2\">{this.state.squares[2]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"3\">{this.state.squares[3]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"4\">{this.state.squares[4]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"5\">{this.state.squares[5]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"6\">{this.state.squares[6]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"7\">{this.state.squares[7]}</div>\n     <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"8\">{this.state.squares[8]}</div>\n   </div>  \n\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\r\nimport './Header.css';\r\nclass Header extends React.Component {\r\n  render() {\r\n  return (\r\n   <div className=\"header\">\r\n     <h1>Игра крестики-нолики</h1>\r\n   </div>  \r\n  );\r\n}\r\n}\r\n\r\nexport default Header;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './Header';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}